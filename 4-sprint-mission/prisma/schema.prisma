// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int       @id @default(autoincrement())
  email        String?   @unique
  nickname     String?
  image        String?
  password     String?
  refreshToken String?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  Comment      Comment[]
  Product      Product[]
  Article      Article[]
}

model Product {
  id          Int       @id @default(autoincrement())
  name        String
  description String?
  price       Float
  tag         category
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  userId      Int
  user        User      @relation(fields: [userId], references: [id])
  Comment     Comment[]
}

model Article {
  id        Int       @id @default(autoincrement())
  title     String
  content   String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  userId    Int
  user      User      @relation(fields: [userId], references: [id])
  Comment   Comment[]
}

model Board {
  id          Int       @id @default(autoincrement())
  title       String
  description String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  Comment     Comment[]
}

model Comment {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  rating      Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  board   Board? @relation(fields: [boardId], references: [id])
  boardId Int?

  product   Product? @relation(fields: [productId], references: [id])
  productId Int?

  article   Article? @relation(fields: [articleId], references: [id])
  articleId Int?

  author   User @relation(fields: [authorId], references: [id])
  authorId Int
}

enum category {
  FASHION
  BEAUTY
  SPORTS
  ELECTRONICS
  HOME_INTERIOR
  HOUSEHOLD_SUPPLIES
  KITCHENWARE
}
